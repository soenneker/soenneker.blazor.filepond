@page "/limbo-file-demo"
@using Soenneker.Blazor.FilePond
@using Soenneker.Blazor.FilePond.Dtos
@using Microsoft.Extensions.Logging
@using Soenneker.Blazor.FilePond.Enums
@using Soenneker.Blazor.FilePond.Options
@using Soenneker.Utils.Random
@inject ILogger<LimboFileDemo> Logger

<div class="demo-container">
    <header class="demo-header">
        <div class="header-content">
            <div class="logo-container">
                <img src="https://user-images.githubusercontent.com/4441470/224455560-91ed3ee7-f510-4041-a8d2-3fc093025112.png" alt="FilePond Logo" class="logo" />
            </div>
            <h1 class="demo-title">Limbo File Demo</h1>
            <p class="demo-subtitle">Test adding limbo files without failing validation. Limbo files are placeholder files that represent files in a temporary state.</p>
        </div>
    </header>

    <div class="demo-grid">
        <section class="demo-card main-section">
            <div class="card-header">
                <div class="card-icon">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M14 2H6A2 2 0 0 0 4 4V20A2 2 0 0 0 6 22H18A2 2 0 0 0 20 20V8L14 2Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <polyline points="14,2 14,8 20,8" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                </div>
                <div class="card-title-group">
                    <h2 class="card-title">FilePond with Validation</h2>
                    <p class="card-description">This FilePond instance has validation enabled. Try adding limbo files to see how they bypass validation.</p>
                </div>
            </div>
            
            <div class="filepond-container">
                <FilePond @ref="FilePond" 
                          Options="_options" 
                          OnInit="OnInit" 
                          OnAddFile="OnAddFile" 
                          OnInitFile="OnInitFile" 
                          OnBeforeAddFile="OnBeforeAddFile">
                </FilePond>
            </div>
        </section>

        <section class="demo-card limbo-operations-section">
            <div class="card-header">
                <div class="card-icon">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M14 2H6A2 2 0 0 0 4 4V20A2 2 0 0 0 6 22H18A2 2 0 0 0 20 20V8L14 2Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <polyline points="14,2 14,8 20,8" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                </div>
                <div class="card-title-group">
                    <h2 class="card-title">Limbo File Operations</h2>
                    <p class="card-description">Add limbo files with different options to test validation bypass. Note: Basic limbo files use 'application/octet-stream' which may fail validation.</p>
                </div>
            </div>
            
            <div class="action-group">
                <button @onclick="AddBasicLimboFile" class="action-btn action-btn--primary">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M12 5V19M5 12H19" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    Add Basic Limbo File
                </button>
                <button @onclick="AddLimboFileSilent" class="action-btn action-btn--info">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M9 12L11 14L15 10M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    Add Silent Limbo File
                </button>
                <button @onclick="AddLimboFileWithValidType" class="action-btn action-btn--success">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M9 12L11 14L15 10M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    Add Valid Type Limbo
                </button>
                <button @onclick="AddLimboFileHiddenSize" class="action-btn action-btn--warning">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M10.29 3.86L1.82 18A2 2 0 0 0 3.61 21H20.4A2 2 0 0 0 22.19 18L13.72 3.86A2 2 0 0 0 10.29 3.86Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <line x1="12" y1="9" x2="12" y2="13" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <line x1="12" y1="17" x2="12.01" y2="17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    Add Limbo (Hidden Size)
                </button>
                <button @onclick="AddMultipleLimboFiles" class="action-btn action-btn--success">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M16 16H16.01M12 12H12.01M8 8H8.01M3 12C3 13.1819 3.23279 14.3522 3.68508 15.4442C4.13738 16.5361 4.80031 17.5282 5.63604 18.364C6.47177 19.1997 7.46392 19.8626 8.55585 20.3149C9.64778 20.7672 10.8181 21 12 21C13.1819 21 14.3522 20.7672 15.4442 20.3149C16.5361 19.8626 17.5282 19.1997 18.364 18.364C19.1997 17.5282 19.8626 16.5361 20.3149 15.4442C20.7672 14.3522 21 13.1819 21 12C21 10.8181 20.7672 9.64778 20.3149 8.55585C19.8626 7.46392 19.1997 6.47177 18.364 5.63604C17.5282 4.80031 16.5361 4.13738 15.4442 3.68508C14.3522 3.23279 13.1819 3 12 3C10.8181 3 9.64778 3.23279 8.55585 3.68508C7.46392 4.13738 6.47177 4.80031 5.63604 5.63604C4.80031 6.47177 4.13738 7.46392 3.68508 8.55585C3.23279 9.64778 3 10.8181 3 12Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    Add Multiple Limbo Files
                </button>
            </div>
        </section>

        <section class="demo-card validation-control-section">
            <div class="card-header">
                <div class="card-icon">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M9 12L11 14L15 10M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                </div>
                <div class="card-title-group">
                    <h2 class="card-title">Validation Control</h2>
                    <p class="card-description">Test with different validation settings to see how limbo files behave</p>
                </div>
            </div>
            
            <div class="action-group">
                <button @onclick="ToggleFileSizeValidation" class="action-btn action-btn--secondary">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M10.29 3.86L1.82 18A2 2 0 0 0 3.61 21H20.4A2 2 0 0 0 22.19 18L13.72 3.86A2 2 0 0 0 10.29 3.86Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <line x1="12" y1="9" x2="12" y2="13" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <line x1="12" y1="17" x2="12.01" y2="17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    Toggle Size Validation
                </button>
                <button @onclick="ToggleFileTypeValidation" class="action-btn action-btn--secondary">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M10.29 3.86L1.82 18A2 2 0 0 0 3.61 21H20.4A2 2 0 0 0 22.19 18L13.72 3.86A2 2 0 0 0 10.29 3.86Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <line x1="12" y1="9" x2="12" y2="13" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <line x1="12" y1="17" x2="12.01" y2="17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    Toggle Type Validation
                </button>
                <button @onclick="SetPermissiveValidation" class="action-btn action-btn--success">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M9 12L11 14L15 10M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    Set Permissive Validation
                </button>
                <button @onclick="SetRestrictiveValidation" class="action-btn action-btn--danger">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    Set Restrictive Validation
                </button>
            </div>
        </section>

        <section class="demo-card comparison-section">
            <div class="card-header">
                <div class="card-icon">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M9 19C7.89543 19 7 18.1046 7 17C7 15.8954 7.89543 15 9 15C10.1046 15 11 15.8954 11 17C11 18.1046 10.1046 19 9 19Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M20 19C18.8954 19 18 18.1046 18 17C18 15.8954 18.8954 15 20 15C21.1046 15 22 15.8954 22 17C22 18.1046 21.1046 19 20 19Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M11 17H15L22 10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M15 17H9L2 10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                </div>
                <div class="card-title-group">
                    <h2 class="card-title">Comparison Tests</h2>
                    <p class="card-description">Compare limbo files with regular files to see the difference</p>
                </div>
            </div>
            
            <div class="action-group">
                <button @onclick="AddRegularFile" class="action-btn action-btn--primary">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M14 2H6A2 2 0 0 0 4 4V20A2 2 0 0 0 6 22H18A2 2 0 0 0 20 20V8L14 2Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <polyline points="14,2 14,8 20,8" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    Add Regular File
                </button>
                <button @onclick="AddInvalidFile" class="action-btn action-btn--warning">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M10.29 3.86L1.82 18A2 2 0 0 0 3.61 21H20.4A2 2 0 0 0 22.19 18L13.72 3.86A2 2 0 0 0 10.29 3.86Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <line x1="12" y1="9" x2="12" y2="13" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <line x1="12" y1="17" x2="12.01" y2="17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    Try Invalid File Type
                </button>
                <button @onclick="ClearAllFiles" class="action-btn action-btn--danger">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M3 6H5H21M8 6V4C8 3.46957 8.21071 2.96086 8.58579 2.58579C8.96086 2.21071 9.46957 2 10 2H14C14.5304 2 15.0391 2.21071 15.4142 2.58579C15.7893 2.96086 16 3.46957 16 4V6M19 6V20C19 20.5304 18.7893 21.0391 18.4142 21.4142C18.0391 21.7893 17.5304 22 17 22H7C6.46957 22 5.96086 21.7893 5.58579 21.4142C5.21071 21.0391 5 20.5304 5 20V6H19Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    Clear All Files
                </button>
            </div>
        </section>

        <section class="demo-card status-section">
            <div class="card-header">
                <div class="card-icon">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M9 12L11 14L15 10M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                </div>
                <div class="card-title-group">
                    <h2 class="card-title">Current Status</h2>
                    <p class="card-description">View current validation settings and file information</p>
                </div>
            </div>
            
            <div class="status-info">
                <div class="status-item">
                    <span class="status-label">File Size Validation:</span>
                    <span class="status-value @(_options.AllowFileSizeValidation ? "enabled" : "disabled")">
                        @(_options.AllowFileSizeValidation ? "Enabled" : "Disabled")
                    </span>
                </div>
                <div class="status-item">
                    <span class="status-label">File Type Validation:</span>
                    <span class="status-value @(_options.AllowFileTypeValidation ? "enabled" : "disabled")">
                        @(_options.AllowFileTypeValidation ? "Enabled" : "Disabled")
                    </span>
                </div>
                <div class="status-item">
                    <span class="status-label">Max File Size:</span>
                    <span class="status-value">@(_options.MaxFileSize?.ToString("N0") ?? "Unlimited") bytes</span>
                </div>
                <div class="status-item">
                    <span class="status-label">Accepted Types:</span>
                    <span class="status-value">@(_options.AcceptedFileTypes?.Count > 0 ? string.Join(", ", _options.AcceptedFileTypes) : "All types")</span>
                </div>
                <div class="status-item">
                    <span class="status-label">Files Added:</span>
                    <span class="status-value">@_filesAddedCount</span>
                </div>
            </div>
        </section>

        <section class="demo-card navigation-section">
            <div class="card-header">
                <div class="card-icon">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M3 12L5 10M5 10L12 3L19 10M5 10V20C5 20.5523 5.44772 21 6 21H9M19 10L21 12M19 10V20C19 20.5523 18.5523 21 18 21H15M9 21C9.55228 21 10 20.5523 10 20V16C10 15.4477 10.4477 15 11 15H13C13.5523 15 14 15.4477 14 16V20C14 20.5523 14.4477 21 15 21M9 21H15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                </div>
                <div class="card-title-group">
                    <h2 class="card-title">Navigation</h2>
                    <p class="card-description">Explore other demo pages and features</p>
                </div>
            </div>
            
            <div class="action-group">
                <NavLink href="/" class="action-btn action-btn--primary">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M3 9L12 2L21 9V20C21 20.5523 20.5523 21 20 21H4C3.44772 21 3 20.5523 3 20V9Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    Home
                </NavLink>
                <NavLink href="/second" class="action-btn action-btn--primary">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    Second Page
                </NavLink>
                <NavLink href="/validation-demo" class="action-btn action-btn--success">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M9 12L11 14L15 10M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    Validation Demo
                </NavLink>
            </div>
        </section>
    </div>
</div>

<style>
    /* Modern CSS Reset and Base Styles */
    * {
        box-sizing: border-box;
    }

    /* Container and Layout */
    .demo-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 1rem;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
        line-height: 1.6;
        color: #1a1a1a;
        background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
        min-height: 100vh;
    }

    /* Header Section */
    .demo-header {
        text-align: center;
        margin-bottom: 3rem;
        padding: 2rem 0;
    }

    .header-content {
        max-width: 800px;
        margin: 0 auto;
    }

    .logo-container {
        margin-bottom: 1.5rem;
    }

    .logo {
        height: 60px;
        width: auto;
        filter: drop-shadow(0 4px 6px rgba(0, 0, 0, 0.1));
    }

    .demo-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin: 0 0 1rem 0;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        letter-spacing: -0.025em;
    }

    .demo-subtitle {
        font-size: 1.125rem;
        color: #64748b;
        margin: 0;
        font-weight: 400;
        line-height: 1.7;
    }

    /* Grid Layout */
    .demo-grid {
        display: grid;
        gap: 2rem;
        grid-template-columns: 1fr;
    }

    @@media (min-width: 768px) {
        .demo-grid {
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        }
    }

    /* Main section spans full width */
    .main-section {
        grid-column: 1 / -1;
    }

    /* Card Design */
    .demo-card {
        background: white;
        border-radius: 16px;
        padding: 2rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        border: 1px solid rgba(255, 255, 255, 0.8);
        backdrop-filter: blur(10px);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
    }

    .demo-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
    }

    .demo-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }

    /* Card Header */
    .card-header {
        display: flex;
        align-items: flex-start;
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .card-icon {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 48px;
        height: 48px;
        border-radius: 12px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        flex-shrink: 0;
    }

    .card-title-group {
        flex: 1;
    }

    .card-title {
        font-size: 1.25rem;
        font-weight: 600;
        margin: 0 0 0.5rem 0;
        color: #1e293b;
    }

    .card-description {
        font-size: 0.875rem;
        color: #64748b;
        margin: 0;
        line-height: 1.5;
    }

    /* Action Buttons */
    .action-group {
        display: flex;
        flex-wrap: wrap;
        gap: 0.75rem;
        margin-top: 1.5rem;
    }

    .action-btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1.25rem;
        border: none;
        border-radius: 8px;
        font-size: 0.875rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
        text-decoration: none;
        position: relative;
        overflow: hidden;
        min-height: 44px;
    }

    .action-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s;
    }

    .action-btn:hover::before {
        left: 100%;
    }

    .action-btn:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    .action-btn:active {
        transform: translateY(0);
    }

    /* Button Variants */
    .action-btn--primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
    }

    .action-btn--success {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        color: white;
    }

    .action-btn--danger {
        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
        color: white;
    }

    .action-btn--warning {
        background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
        color: white;
    }

    .action-btn--secondary {
        background: linear-gradient(135deg, #6b7280 0%, #4b5563 100%);
        color: white;
    }

    .action-btn--info {
        background: linear-gradient(135deg, #06b6d4 0%, #0891b2 100%);
        color: white;
    }

    /* Status Information */
    .status-info {
        margin-top: 1.5rem;
        padding: 1rem;
        background: #f8fafc;
        border-radius: 8px;
        border: 1px solid #e2e8f0;
    }

    .status-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.5rem 0;
        border-bottom: 1px solid #e2e8f0;
    }

    .status-item:last-child {
        border-bottom: none;
    }

    .status-label {
        font-weight: 500;
        color: #374151;
    }

    .status-value {
        font-weight: 600;
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        font-size: 0.875rem;
    }

    .status-value.enabled {
        background: #dcfce7;
        color: #166534;
    }

    .status-value.disabled {
        background: #fee2e2;
        color: #991b1b;
    }

    /* Responsive Design */
    @@media (max-width: 640px) {
        .demo-container {
            padding: 1rem 0.5rem;
        }

        .demo-title {
            font-size: 2rem;
        }

        .demo-card {
            padding: 1.5rem;
        }

        .action-group {
            flex-direction: column;
        }

        .action-btn {
            width: 100%;
            justify-content: center;
        }

        .status-item {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.25rem;
        }
    }

    /* Focus States for Accessibility */
    .action-btn:focus {
        outline: 2px solid #667eea;
        outline-offset: 2px;
    }

    /* Loading States */
    .action-btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        transform: none;
    }

    /* Custom Scrollbar */
    ::-webkit-scrollbar {
        width: 8px;
    }

    ::-webkit-scrollbar-track {
        background: #f1f5f9;
    }

    ::-webkit-scrollbar-thumb {
        background: #cbd5e1;
        border-radius: 4px;
    }

    ::-webkit-scrollbar-thumb:hover {
        background: #94a3b8;
    }
</style>

@code {
    private FilePond? FilePond { get; set; }
    private int _filesAddedCount = 0;

    private readonly FilePondOptions _options = new()
    {
        MaxFiles = 20,
        AllowMultiple = true,
        AllowFileSizeValidation = true,
        EnabledPlugins = [FilePondPluginType.FileValidateType],
        AllowFileTypeValidation = true,
        MaxFileSize = 10_000_000, // 10MB limit
        AcceptedFileTypes =
        [
	        "image/*",
	        "text/*",
	        "application/pdf"
        ],
        UseCdn = false
    };

    private void OnInit()
    {
        Logger.LogInformation("LimboFileDemo: FilePond initialized");
    }

    private async Task AddBasicLimboFile()
    {
        await FilePond!.AddLimboFile($"limbo-file-{_filesAddedCount + 1}.txt");
        _filesAddedCount++;
        Logger.LogInformation("Added basic limbo file");
    }

    private async Task AddLimboFileSilent()
    {
        var options = new FilePondAddFileOptions
        {
            SilentAdd = true
        };
        await FilePond!.AddLimboFile($"silent-limbo-{_filesAddedCount + 1}.txt", options: options);
        _filesAddedCount++;
        Logger.LogInformation("Added silent limbo file");
    }

    private async Task AddLimboFileWithValidType()
    {
        var options = new FilePondAddFileOptions
        {
            SilentAdd = true,
            ShowFileSize = false,
            MimeType = "text/plain" // Use text/plain which is in our accepted file types
        };

        await FilePond!.AddLimboFile($"valid-type-limbo-{_filesAddedCount + 1}.txt", options);
        _filesAddedCount++;
        Logger.LogInformation("Added limbo file with valid MIME type");
    }

    private async Task AddLimboFileHiddenSize()
    {
        var options = new FilePondAddFileOptions
        {
            ShowFileSize = false,
            MimeType = "text/plain"
        };

        await FilePond!.AddLimboFile($"hidden-size-limbo-{_filesAddedCount + 1}.txt", options);
        _filesAddedCount++;
        Logger.LogInformation("Added limbo file with hidden size");
    }

    private async Task AddMultipleLimboFiles()
    {
        for (var i = 0; i < 3; i++)
        {
            var options = new FilePondAddFileOptions
            {
                SilentAdd = true,
                ShowFileSize = false,
                MimeType = "text/plain"
            };
            await FilePond!.AddLimboFile($"batch-limbo-{_filesAddedCount + i + 1}.txt", options);
        }
        _filesAddedCount += 3;
        Logger.LogInformation("Added multiple limbo files");
    }

    private async Task ToggleFileSizeValidation()
    {
        _options.AllowFileSizeValidation = !_options.AllowFileSizeValidation;
        await FilePond!.SetOptions(_options);
        Logger.LogInformation("File size validation toggled to: {enabled}", _options.AllowFileSizeValidation);
    }

    private async Task ToggleFileTypeValidation()
    {
        _options.AllowFileTypeValidation = !_options.AllowFileTypeValidation;
        await FilePond!.SetOptions(_options);
        Logger.LogInformation("File type validation toggled to: {enabled}", _options.AllowFileTypeValidation);
    }

    private async Task SetPermissiveValidation()
    {
        _options.AllowFileSizeValidation = false;
        _options.AllowFileTypeValidation = false;
        _options.MaxFileSize = long.MaxValue;
        _options.AcceptedFileTypes = ["*/*"];
        await FilePond!.SetOptions(_options);
        Logger.LogInformation("Set permissive validation settings");
    }

    private async Task SetRestrictiveValidation()
    {
        _options.AllowFileSizeValidation = true;
        _options.AllowFileTypeValidation = true;
        _options.MaxFileSize = 1_000_000; // 1MB limit
        _options.AcceptedFileTypes =
        [
	        "image/jpeg",
	        "image/png"
        ];
        await FilePond!.SetOptions(_options);
        Logger.LogInformation("Set restrictive validation settings");
    }

    private async Task AddRegularFile()
    {
        await FilePond!.AddFile(GetRandomImageUri());
        _filesAddedCount++;
        Logger.LogInformation("Added regular file");
    }

    private async Task AddInvalidFile()
    {
        // Try to add a file that should fail validation (if restrictions are enabled)
        try
        {
            await FilePond!.AddFile("data:text/plain;base64,SGVsbG8gV29ybGQ="); // "Hello World" as base64
            _filesAddedCount++;
            Logger.LogInformation("Added file (may have failed validation)");
        }
        catch (Exception ex)
        {
            Logger.LogWarning("Failed to add invalid file: {error}", ex.Message);
        }
    }

    private async Task ClearAllFiles()
    {
        await FilePond!.RemoveFiles();
        _filesAddedCount = 0;
        Logger.LogInformation("Cleared all files");
    }

    private static string GetRandomImageUri()
    {
        int fileHeight = RandomUtil.Next(200, 500);
        int fileWidth = RandomUtil.Next(200, 500);
        return $"https://picsum.photos/{fileHeight}/{fileWidth}";
    }

    private async Task OnAddFile((FilePondError? error, FilePondFileItem fileItem) obj)
    {
        if (obj.error != null)
        {
            Logger.LogWarning("File add error: {error}", obj.error);
        }
        else
        {
            Logger.LogInformation("File added successfully: {fileName}", obj.fileItem.Filename);
        }
    }

    private void OnInitFile(FilePondFileItem file)
    {
        Logger.LogInformation("File initialized: {fileName}", file.Filename);
    }

    private ValueTask<bool> OnBeforeAddFile(FilePondFileItem file)
    {
        Logger.LogInformation("Before add file: {fileName}", file.Filename);
        return ValueTask.FromResult(true);
    }
}
